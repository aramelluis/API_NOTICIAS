
#  API de NotÃ­cias com Django REST Framework

Uma API RESTful simples para gerenciamento de notÃ­cias, autores, categorias e comentÃ¡rios.

Desenvolvido com **Django** e **Django REST Framework**.

---

##  Funcionalidades

- CRUD completo para:
  - Categorias (`/api/categorias/`)
  - Autores (`/api/autores/`)
  - NotÃ­cias (`/api/noticias/`)
  - ComentÃ¡rios (`/api/comentarios/`)
- SerializaÃ§Ã£o automÃ¡tica com `ModelSerializer`
- NavegaÃ§Ã£o via interface web do DRF

---

##  InstalaÃ§Ã£o

1. **Clone o repositÃ³rio:**

```bash
git clone https://github.com/seu-usuario/nome-do-repo.git
cd nome-do-repo
````

2. **Crie um ambiente virtual e ative:**

```bash
python -m venv venv
source venv/bin/activate  # Linux/Mac
venv\Scripts\activate     # Windows
```

3. **Instale as dependÃªncias:**

```bash
pip install -r requirements.txt
```

> Exemplo de dependÃªncias:
>
> ```
> Django>=4.2
> djangorestframework>=3.14
> ```

4. **Execute as migraÃ§Ãµes:**

```bash
python manage.py migrate
```

5. **Crie um superusuÃ¡rio (opcional):**

```bash
python manage.py createsuperuser
```

6. **Execute o servidor:**

```bash
python manage.py runserver
```

Acesse em: `http://127.0.0.1:8000/api/`

---

## ðŸ”— Endpoints da API

| Recurso     | Endpoint Base       | DescriÃ§Ã£o           |
| ----------- | ------------------- | ------------------- |
| Categorias  | `/api/categorias/`  | CRUD de categorias  |
| Autores     | `/api/autores/`     | CRUD de autores     |
| NotÃ­cias    | `/api/noticias/`    | CRUD de notÃ­cias    |
| ComentÃ¡rios | `/api/comentarios/` | CRUD de comentÃ¡rios |

> Todos os endpoints aceitam os mÃ©todos: `GET`, `POST`, `PUT`, `PATCH`, `DELETE`.

---

## ðŸ›  Exemplo de RequisiÃ§Ãµes

### Criar uma notÃ­cia (POST `/api/noticias/`)

```json
{
  "titulo": "Nova funcionalidade no site",
  "conteudo": "Detalhes sobre a nova funcionalidade...",
  "autor": 1,
  "categoria": 2,
  "publicada": true
}
```

### Obter todas as notÃ­cias (GET `/api/noticias/`)

```http
GET /api/noticias/
```

---

##  Testes

VocÃª pode usar ferramentas como:

* [Postman](https://www.postman.com/)
* [Insomnia](https://insomnia.rest/)
* `curl` via terminal
* Interface do Django REST Framework (`/api/`)

---

##  Estrutura do Projeto

```
meu_projeto/
â”œâ”€â”€ meu_app/
â”‚   â”œâ”€â”€ models.py
â”‚   â”œâ”€â”€ serializers.py
â”‚   â”œâ”€â”€ views.py
â”‚   â”œâ”€â”€ urls.py
â”œâ”€â”€ meu_projeto/
â”‚   â”œâ”€â”€ settings.py
â”‚   â”œâ”€â”€ urls.py
â”œâ”€â”€ manage.py
â””â”€â”€ requirements.txt
```

---

##  Autor 

Desenvolvido por ARAMEL JOÃƒO.
